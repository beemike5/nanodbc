<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__exceptions" kind="group">
    <compoundname>exceptions</compoundname>
    <title>Exception types</title>
    <innerclass refid="classnanodbc_1_1type__incompatible__error" prot="public">nanodbc::type_incompatible_error</innerclass>
    <innerclass refid="classnanodbc_1_1null__access__error" prot="public">nanodbc::null_access_error</innerclass>
    <innerclass refid="classnanodbc_1_1index__range__error" prot="public">nanodbc::index_range_error</innerclass>
    <innerclass refid="classnanodbc_1_1programming__error" prot="public">nanodbc::programming_error</innerclass>
    <innerclass refid="classnanodbc_1_1database__error" prot="public">nanodbc::database_error</innerclass>
    <briefdescription>
<para>Possible error conditions. </para>
    </briefdescription>
    <detaileddescription>
<para>Specific errors such as <computeroutput><ref refid="classnanodbc_1_1type__incompatible__error" kindref="compound">type_incompatible_error</ref></computeroutput>, <computeroutput><ref refid="classnanodbc_1_1null__access__error" kindref="compound">null_access_error</ref></computeroutput>, and <computeroutput><ref refid="classnanodbc_1_1index__range__error" kindref="compound">index_range_error</ref></computeroutput> can arise from improper use of the nanodbc library. The general <computeroutput><ref refid="classnanodbc_1_1database__error" kindref="compound">database_error</ref></computeroutput> is for all other situations in which the ODBC driver or C API reports an error condition. The explanatory string for <ref refid="classnanodbc_1_1database__error" kindref="compound">database_error</ref> will, if possible, contain a diagnostic message obtained from <computeroutput>SQLGetDiagRec()</computeroutput>. </para>
    </detaileddescription>
  </compounddef>
</doxygen>
