<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="group__bind__multi" kind="group">
    <compoundname>bind_multi</compoundname>
    <title>Binding multiple non-string values</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__bind__multi_1ga21de5d66a3e381040ca03a4f0fdcc5db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nanodbc::statement::bind</definition>
        <argsstring>(short param_index, T const *values, std::size_t batch_size, param_direction direction=PARAM_IN)</argsstring>
        <name>bind</name>
        <param>
          <type>short</type>
          <declname>param_index</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>param_direction</type>
          <declname>direction</declname>
          <defval>PARAM_IN</defval>
        </param>
        <briefdescription>
<para>Binds multiple values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__bind__multi" kindref="compound">Binding multiple non-string values</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/d/nanodbc/nanodbc/nanodbc.h" line="780" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bind__multi_1gadc594c1e061661b7f95639fcf25ec2cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nanodbc::statement::bind</definition>
        <argsstring>(short param_index, T const *values, std::size_t batch_size, T const *null_sentry, param_direction direction=PARAM_IN)</argsstring>
        <name>bind</name>
        <param>
          <type>short</type>
          <declname>param_index</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>null_sentry</declname>
        </param>
        <param>
          <type>param_direction</type>
          <declname>direction</declname>
          <defval>PARAM_IN</defval>
        </param>
        <briefdescription>
<para>Binds multiple values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__bind__multi" kindref="compound">Binding multiple non-string values</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/d/nanodbc/nanodbc/nanodbc.h" line="789" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bind__multi_1gab7047fdb7cfec9bed6861b9a9c9b98cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class T</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nanodbc::statement::bind</definition>
        <argsstring>(short param_index, T const *values, std::size_t batch_size, bool const *nulls, param_direction direction=PARAM_IN)</argsstring>
        <name>bind</name>
        <param>
          <type>short</type>
          <declname>param_index</declname>
        </param>
        <param>
          <type>T const *</type>
          <declname>values</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>batch_size</declname>
        </param>
        <param>
          <type>bool const *</type>
          <declname>nulls</declname>
        </param>
        <param>
          <type>param_direction</type>
          <declname>direction</declname>
          <defval>PARAM_IN</defval>
        </param>
        <briefdescription>
<para>Binds multiple values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__bind__multi" kindref="compound">Binding multiple non-string values</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/d/nanodbc/nanodbc/nanodbc.h" line="799" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bind__multi_1gac04830aadf2e00d3a3d05af8690eb241" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nanodbc::statement::bind</definition>
        <argsstring>(short param_index, std::vector&lt; std::vector&lt; uint8_t &gt;&gt; const &amp;values, param_direction direction=PARAM_IN)</argsstring>
        <name>bind</name>
        <param>
          <type>short</type>
          <declname>param_index</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; uint8_t &gt;&gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>param_direction</type>
          <declname>direction</declname>
          <defval>PARAM_IN</defval>
        </param>
        <briefdescription>
<para>Binds multiple values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__bind__multi" kindref="compound">Binding multiple non-string values</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/d/nanodbc/nanodbc/nanodbc.h" line="808" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bind__multi_1ga5242c1154450bfe699b73a2f26294560" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nanodbc::statement::bind</definition>
        <argsstring>(short param_index, std::vector&lt; std::vector&lt; uint8_t &gt;&gt; const &amp;values, bool const *nulls, param_direction direction=PARAM_IN)</argsstring>
        <name>bind</name>
        <param>
          <type>short</type>
          <declname>param_index</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; uint8_t &gt;&gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>bool const *</type>
          <declname>nulls</declname>
        </param>
        <param>
          <type>param_direction</type>
          <declname>direction</declname>
          <defval>PARAM_IN</defval>
        </param>
        <briefdescription>
<para>Binds multiple values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__bind__multi" kindref="compound">Binding multiple non-string values</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/d/nanodbc/nanodbc/nanodbc.h" line="815" column="10"/>
      </memberdef>
      <memberdef kind="function" id="group__bind__multi_1ga72e3b3fea37e2e8456f4cf2b66aa21f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void nanodbc::statement::bind</definition>
        <argsstring>(short param_index, std::vector&lt; std::vector&lt; uint8_t &gt;&gt; const &amp;values, uint8_t const *null_sentry, param_direction direction=PARAM_IN)</argsstring>
        <name>bind</name>
        <param>
          <type>short</type>
          <declname>param_index</declname>
        </param>
        <param>
          <type>std::vector&lt; std::vector&lt; uint8_t &gt;&gt; const &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>uint8_t const *</type>
          <declname>null_sentry</declname>
        </param>
        <param>
          <type>param_direction</type>
          <declname>direction</declname>
          <defval>PARAM_IN</defval>
        </param>
        <briefdescription>
<para>Binds multiple values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="group__bind__multi" kindref="compound">Binding multiple non-string values</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/d/nanodbc/nanodbc/nanodbc.h" line="823" column="10"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Binds given values to given parameter placeholder number in the prepared statement. </para>
    </briefdescription>
    <detaileddescription>
<para>If your prepared SQL query has any parameter markers, ? (question mark) placeholders, this is how you bind values to them. Parameter markers are numbered using Zero-based index from left to right.</para>
<para>It is possible to use these functions for batch operations.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>param_index</parametername>
</parameternamelist>
<parameterdescription>
<para>Zero-based index of parameter marker (placeholder position). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Values to substitute into placeholder. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>batch_size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of values being bound. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>null_sentry</parametername>
</parameternamelist>
<parameterdescription>
<para>Value which should represent a null value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nulls</parametername>
</parameternamelist>
<parameterdescription>
<para>Flags for values that should be set to a null value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>param_direction</parametername>
</parameternamelist>
<parameterdescription>
<para>ODBC parameter direction. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername><ref refid="classnanodbc_1_1database__error" kindref="compound">database_error</ref></parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
  </compounddef>
</doxygen>
